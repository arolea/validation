import com.rolea.learning.validation.domain.Product;
import com.rolea.learning.validation.service.ValidationWarning;
import com.rolea.learning.validation.service.ProductAdditionalData;
import com.rolea.learning.validation.service.ValidationResultContainer;
import com.rolea.learning.validation.service.ProductAdditionalData;
import java.util.*;

global ValidationResultContainer resultContainer;
global ProductAdditionalData additionalData;

function boolean validateStock(Product product, ProductAdditionalData additionalData) {
    Map<Long, Long> stockInfo = additionalData.getProductStockData();

    return !(stockInfo.containsKey(product.getId()) &&
             stockInfo.get(product.getId()) != null &&
             stockInfo.get(product.getId()) > 0);
}

rule "Product is in stock"
    when
        productInstance:Product()
        eval(validateStock(productInstance, additionalData))
    then
        String message = String.format("Product with id %d is currently out of stock", productInstance.getId());
        resultContainer.addValidationWarning(productInstance, message);
end